import configparser
import logging

from aiogram import Bot, Dispatcher, executor, types, filters

# –†–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞ –∑–∞ –∑–∞–º–æ–≤—á–∞–Ω–Ω—è–º - TEST,
# —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Ä–µ–∂–∏–º PROD, –∑–∞–º—ñ–Ω—ñ—Ç—å 1 –Ω–∞ 0
mode = ['PROD', 'TEST'][1]

# –†–æ–±–æ—Ç–∞ –∑ –∫–æ–Ω—Ñ—ñ–≥ —Ñ–∞–π–ª–æ–º
config = configparser.ConfigParser()
config.read('config.ini')

# –ü—Ä–∏—Å–≤–æ—î–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏–º –¥–∞–Ω–∏—Ö –∑ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
API_TOKEN = config[mode]['API_TOKEN']
CNL = config[mode]['CNL']
ADMIN_ID = config[mode]['ADMIN_ID']

# –ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –≤–∞—à–∏—Ö –ø–æ—Å—Ç—ñ–≤
# '<a href="–≤–∞—à–µ_–ø–æ—Å–∏–ª–∞–Ω–Ω—è">—Ç–µ–∫—Å—Ç –ø–æ—Å–∏–ª–∞–Ω–Ω—è</a>'
LINK = '<a href="https://t.me/+VctHAAqFS0Y0NmRi">–ú–ï–ú–û–ë–û–†–û–ù–ê</a>'

# –í–º–∏–∫–∞—î–º–æ –ª–æ–≥
logging.basicConfig(level=logging.INFO)

# –°—Ç–≤–æ—Ä—é—î–º–æ –æ–± º—î–∫—Ç –±–æ—Ç–∞, –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞, —Ñ—ñ–ª—å—Ç—Ä –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
bot = Bot(token=API_TOKEN, parse_mode='html')
dp = Dispatcher(bot)
admin_check = filters.AdminFilter(is_chat_admin=CNL)


async def start_bot(_):
    """
    –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –∞–¥–º—ñ–Ω–∞–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    :param _:
    :return: None
    """
    await bot.send_message(ADMIN_ID, f'–ë–æ—Ç –ø—Ä–∞—Ü—é—î –≤ —Ä–µ–∂–∏–º—ñ {mode}.')


@dp.message_handler(admin_check, commands=['start', 'help'])
async def send_welcome(message: types.Message):
    """
    –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –∫–æ–º–∞–Ω–¥–∏ `/start` –∞–±–æ `/help`
    """
    await message.reply("–ü—Ä–∏–≤—ñ—Ç, —è –º–µ–º-–º–∞–π–æ—Ä –ë–æ—Ç–µ–Ω–∫–æü´°")


@dp.message_handler(admin_check, content_types=types.ContentType.PHOTO)
async def photo_linker(message: types.Message):
    """
    –î–æ–¥–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫
    """
    if message.caption:
        caption_and_link = f'{message.caption} \n\n {LINK}'
    else:
        caption_and_link = LINK

    await bot.send_photo(chat_id=CNL, photo=message.photo[-1].file_id, caption=caption_and_link)


@dp.message_handler(admin_check, content_types=types.ContentType.VIDEO)
async def video_linker(message: types.Message):
    """
    –î–æ–¥–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–æ –≤—ñ–¥–µ–æ
    """
    if message.caption:
        caption_and_link = f'{message.caption} \n\n {LINK}'
    else:
        caption_and_link = LINK

    await bot.send_video(chat_id=CNL, video=message.video.file_id, caption=caption_and_link)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=start_bot)